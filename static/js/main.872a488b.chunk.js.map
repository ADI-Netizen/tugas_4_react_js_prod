{"version":3,"sources":["ListData/ListMakanan.js","Page/MenuMakanan.js","App.js","serviceWorker.js","index.js"],"names":["ListMakanan","props","state","datalist","gambar","src","this","alt","width","height","Component","MenuMakanan","pesan","jumlah","tampil","pilihPesanan","bind","nasipadang","sate","soto","uduk","kuning","batal","value","e","tampungData","target","setState","Props","onClick","type","placeholder","onChange","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.872a488b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ListMakanan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            datalist: this.props.gambar\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <img src={this.state.datalist} alt=\"Product Makanan\" width=\"150\" height=\"150\" />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListMakanan;","import React, { Component } from 'react';\r\nimport ListMakanan from '../ListData/ListMakanan';\r\n\r\nclass MenuMakanan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pesan: \"\",\r\n            jumlah: 0,\r\n            tampil: false\r\n        };\r\n        this.pilihPesanan = this.pilihPesanan.bind(this);\r\n        this.nasipadang = this.nasipadang.bind(this);\r\n        this.sate = this.sate.bind(this);\r\n        this.soto = this.soto.bind(this);\r\n        this.uduk = this.uduk.bind(this);\r\n        this.kuning = this.kuning.bind(this);\r\n        this.batal = this.batal.bind(this);\r\n    }\r\n\r\n    pilihPesanan(value, e) {\r\n        var tampungData = e.target.value;\r\n        this.setState((state, props) => {\r\n            return {\r\n                [value]: tampungData,\r\n                tampil: true\r\n            }\r\n        });\r\n    }\r\n\r\n    nasipadang() {\r\n        this.setState((state, props) => {\r\n            return {\r\n                pesan: \"Nasi Padang\",\r\n                jumlah: this.state.jumlah + 1,\r\n                tampil: true\r\n            }\r\n        });\r\n    }\r\n\r\n    sate() {\r\n        this.setState((state, props) => {\r\n            return {\r\n                pesan: \"Sate\",\r\n                jumlah: this.state.jumlah + 1,\r\n                tampil: true\r\n            }\r\n        });\r\n    }\r\n\r\n    soto() {\r\n        this.setState((state, props) => {\r\n            return {\r\n                pesan: \"Soto Ayam Lamongan\",\r\n                jumlah: this.state.jumlah + 1,\r\n                tampil: true\r\n            }\r\n        });\r\n    }\r\n\r\n    uduk() {\r\n        this.setState((state, Props) => {\r\n            return {\r\n                pesan: \"Nasi Uduk\",\r\n                jumlah: this.state.jumlah + 1,\r\n                tampil: true\r\n            }\r\n        });\r\n    }\r\n\r\n    kuning() {\r\n        this.setState((state, props) => {\r\n            return {\r\n                pesan: \"Nasi Kuning\",\r\n                jumlah: this.state.jumlah + 1,\r\n                tampil: true\r\n            }\r\n        });\r\n    }\r\n\r\n    batal() {\r\n        this.setState({\r\n            pesan: \"\",\r\n            jumlah: 0,\r\n            tampil: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Daftar Makanan Yang Kami Sediakan : </h1>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\" />\r\n                                <center><button onClick={this.nasipadang}>Pesan Sekarang</button></center>\r\n                            </td>\r\n                            <td>\r\n                                <ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\" />\r\n                                <center><button onClick={this.sate}>Pesan Sekarang</button></center>\r\n                            </td>\r\n                            <td>\r\n                                <ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\" />\r\n                                <center><button onClick={this.soto}>Pesan Sekarang</button></center>\r\n                            </td>\r\n                            <td>\r\n                                <ListMakanan gambar=\"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png \" />\r\n                                <center><button onClick={this.uduk}>Pesan Sekarang</button></center>\r\n                            </td>\r\n                            <td>\r\n                                <ListMakanan gambar=\"https://blog.tokowahab.com/wp-content/uploads/2020/03/Resep-Nasi-Kuning-Tumpeng-Mini.jpg  \" />\r\n                                <center><button onClick={this.kuning}>Pesan Sekarang</button></center>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br />\r\n                <input type=\"text\" value={this.state.pesan} placeholder=\"Masukan Pesanan Anda\" onChange={(e) => this.pilihPesanan('pesan', e)} />&nbsp;\r\n                <input type=\"number\" placeholder=\"Jumlah Pesanan\" onChange={(e) => this.pilihPesanan('jumlah', e)} />&nbsp;\r\n                <button onClick={this.batal}>Batalkan Semua Pesanan</button>\r\n\r\n                {this.state.tampil === true ? (\r\n                    <div>\r\n                        <h3>Pesanan Anda : {this.state.pesan}</h3>\r\n                        <h4>Jumlah Pesanan : {this.state.jumlah}</h4>\r\n                    </div>\r\n                ) : (\r\n                        <h2><center>Anda Belum Memesan</center></h2>\r\n                    )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuMakanan;","import React from 'react';\nimport './App.css';\nimport MenuMakanan from './Page/MenuMakanan';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MenuMakanan />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}